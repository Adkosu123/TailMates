@using TailMates.Web.ViewModels.Admin
@model AllUsersListViewModel

@{
    ViewData["Title"] = "Admin - All Users";
}

<div class="container my-5">
    <h1 class="display-4 fw-bold text-primary text-center mb-5">All Users</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model != null && Model.Users.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover shadow-sm rounded">
                <thead class="table-primary">
                    <tr>
                        <th scope="col">Username</th>
                        <th scope="col">Email</th>
                        <th scope="col">Roles</th>
                        <th scope="col">Managed Shelter</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.Users)
                    {
                        <tr>
                            <td>@user.Username</td>
                            <td>@user.Email</td>
                            <td>@string.Join(", ", user.Roles)</td>
                            <td>@(user.ManagedShelterName ?? "N/A")</td>
                            <td>
                                <a asp-area="Admin" asp-controller="AdminUserManager" asp-action="ManageUserRoles" asp-route-id="@user.Id" class="btn btn-sm btn-info text-white me-2">Manage Roles</a>
                                <button type="button" class="btn btn-sm btn-danger"
                                        data-bs-toggle="modal" data-bs-target="#deleteUserModal"
                                        data-user-id="@user.Id" data-user-name="@user.Username">
                                    Delete
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-center mt-4">
            <nav aria-label="Page navigation">
                <ul class="pagination pagination-lg">
                    <li class="page-item @(!Model.Users.HasPreviousPage ? "disabled" : "")">
                        <a class="page-link"
                           asp-area="Admin"
                           asp-controller="AdminUserManager"
                           asp-action="AllUsers"
                           asp-route-pageIndex="@(Model.Users.PageIndex - 1)"
                           aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    @for (int i = 1; i <= Model.Users.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.Users.PageIndex ? "active" : "")">
                            <a class="page-link"
                               asp-area="Admin"
                               asp-controller="AdminUserManager"
                               asp-action="AllUsers"
                               asp-route-pageIndex="@i">
                                @i
                            </a>
                        </li>
                    }
                    <li class="page-item @(!Model.Users.HasNextPage ? "disabled" : "")">
                        <a class="page-link"
                           asp-area="Admin"
                           asp-controller="AdminUserManager"
                           asp-action="AllUsers"
                           asp-route-pageIndex="@(Model.Users.PageIndex + 1)"
                           aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    }
    else
    {
        <div class="alert alert-info text-center p-5 mt-5 rounded shadow-sm">
            <p class="lead mb-3">No users found.</p>
        </div>
    }
</div>

<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteUserModalLabel">Confirm User Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the user "<strong id="userNameToDelete"></strong>"?</p>
                <p class="text-danger">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <form asp-area="Admin" asp-controller="AdminUserManager" asp-action="DeleteUser" method="post" id="deleteUserForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="userIdToDelete" />
                    <button type="submit" class="btn btn-danger">Delete User</button>
                </form>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var deleteUserModal = document.getElementById('deleteUserModal');
            deleteUserModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var userId = button.getAttribute('data-user-id');
                var userName = button.getAttribute('data-user-name');
                var modalBody = deleteUserModal.querySelector('.modal-body #userNameToDelete');
                var modalFormInput = deleteUserModal.querySelector('.modal-footer #userIdToDelete');

                modalBody.textContent = userName;
                modalFormInput.value = userId;
            });
        });
    </script>
}