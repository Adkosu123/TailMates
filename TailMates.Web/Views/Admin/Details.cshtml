@model TailMates.Web.ViewModels.Admin.AdoptionApplicationDetailsViewModel
@using TailMates.Data.Models.Enums

@{
    ViewData["Title"] = "Application Details";
}

<div class="container my-5">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <h1 class="display-4 fw-bold text-center text-primary mb-4">Application #@Model.Id Details</h1>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="card shadow-lg p-4">
                <div class="row">
                    <div class="col-md-4 text-center">
                        <img src="@Model.PetImageUrl" class="img-fluid rounded-circle" alt="Pet Image" style="width: 150px; height: 150px; object-fit: cover;">
                        <h4 class="mt-3">@Model.PetName</h4>
                        <p class="text-muted">from @Model.ShelterName</p>
                        <a asp-controller="Pet" asp-action="Details" asp-route-id="@Model.PetId" class="btn btn-primary btn-sm">View Pet Profile</a>
                    </div>

                    <div class="col-md-8">
                        <h4 class="border-bottom pb-2 mb-3">Application Information</h4>
                        <dl class="row">
                            <dt class="col-sm-4">Status:</dt>
                            <dd class="col-sm-8">
                                @{
                                    string statusClass = "";
                                    switch (Model.Status)
                                    {
                                        case ApplicationStatus.Pending:
                                            statusClass = "badge bg-warning text-dark";
                                            break;
                                        case ApplicationStatus.Approved:
                                            statusClass = "badge bg-success";
                                            break;
                                        case ApplicationStatus.Rejected:
                                            statusClass = "badge bg-danger";
                                            break;
                                        case ApplicationStatus.Withdrawn:
                                            statusClass = "badge bg-secondary";
                                            break;
                                    }
                                }
                                <span class="@statusClass">@Model.Status.ToString()</span>
                            </dd>

                            <dt class="col-sm-4">Applied On:</dt>
                            <dd class="col-sm-8">@Model.ApplicationDate.ToShortDateString()</dd>

                            <dt class="col-sm-4">Applicant:</dt>
                            <dd class="col-sm-8">
                                @Model.ApplicantName
                                (<a href="mailto:@Model.ApplicantEmail">@Model.ApplicantEmail</a>)
                            </dd>

                            <dt class="col-sm-4">Applicant Notes:</dt>
                            <dd class="col-sm-8">@Model.ApplicantNotes</dd>

                            <dt class="col-sm-4">Admin Notes:</dt>
                            <dd class="col-sm-8">@Model.AdminNotes</dd>
                        </dl>

                        <hr />

                        <h4 class="border-bottom pb-2 mb-3">Manage Application</h4>
                        <form asp-action="UpdateApplicationStatus" method="post">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <div class="mb-3">
                                <label for="status" class="form-label">Update Status</label>
                                <select name="status" class="form-select">
                                    @foreach (var status in Enum.GetValues(typeof(ApplicationStatus)))
                                    {
                                        <option value="@status" selected="@(Model.Status == (ApplicationStatus)status)">@status</option>
                                    }
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="adminNotes" class="form-label">Admin Notes</label>
                                <textarea name="adminNotes" class="form-control" rows="3">@Model.AdminNotes</textarea>
                            </div>
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-primary">Save Changes</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>